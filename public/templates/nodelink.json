{
  "zoom": true,
  "pan": {
    "modifierKeyRequired": null
  },
  "exportButton": true,
  "data": "[dataDefinition]",
  "networks": "[networksDefinition]",
  "width": "[width]",
  "height": "[height]",
  "parameters": [
    {
      "name": "node_selection",
      "network": "network",
      "type": "selection",
      "clearOnBackgroundClick": true
    },
    {
      "name": "neighbours",
      "source": "node_selection",
      "transform": [
        {
          "type": "neighbours",
          "direction": "both"
        }
      ]
    },
    {
      "name": "nodeTypeInShape",
      "value": "[nodeTypeInShape]"
    },
    {
      "name": "nodeSizeParam",
      "bind": {
        "input": "range",
        "event": "onChange",
        "label": "Node Size",
        "min": "1",
        "max": "10",
        "step": "0.1"
      },
      "value": 1
    },
    {
      "name": "nodeOpacityParam",
      "bind": {
        "input": "range",
        "label": "Node Opacity",
        "min": "0.0",
        "max": "1",
        "step": "0.05"
      },
      "value": 1
    },
    {
      "name": "linkWidthParam",
      "bind": {
        "input": "range",
        "label": "Link Width",
        "min": "0",
        "max": "5",
        "step": "1"
      },
      "value": 1
    },
    {
      "name": "linkOpacityParam",
      "bind": {
        "input": "range",
        "label": "Link Opacity",
        "min": "0",
        "max": "1",
        "step": "0.05"
      },
      "value": 0.6
    },
    {
      "name": "labelDensityParam",
      "bind": {
        "input": "range",
        "event": "onChange",
        "label": "Label Density",
        "min": "0",
        "max": "20",
        "step": "1"
      },
      "value": 5
    },
    {
      "name": "labelSizeParam",
      "bind": {
        "input": "range",
        "event": "onChange",
        "label": "Label Size",
        "min": "5",
        "max": "25",
        "step": "1"
      },
      "value": 13
    },
    {
      "name": "linkGapParam",
      "bind": {
        "input": "range",
        "event": "onChange",
        "label": "Link Gap",
        "min": "0",
        "max": "6",
        "step": "1"
      },
      "value": 3
    },
    {
      "name": "time",
      "bind": {
        "input": "brush",
        "axisType": "time",
        "network": "network",
        "for": "links",
        "field": "data._time"
      }
    }
  ],
  "layouts": [
    {
      "name": "layout",
      "network": "network",
      "type": "webcola",
      "avoidOverlap": true
    }
  ],
  "scales": [
    {
      "name": "radius",
      "type": "linear",
      "range": [
        1,
        150
      ],
      "rangeMapFunction": "datum * params.nodeSizeParam",
      "domain": {
        "data": "network.nodes",
        "field": "degree"
      }
    },
    {
      "name": "nodeShape",
      "type": "ordinal",
      "range": "[nodeTypeShapeScheme]",
      "domain": {
        "data": "network.nodes",
        "field": "data.type0"
      }
    },
    {
      "name": "nodeColor",
      "type": "ordinal",
      "range": "[colorScheme]",
      "domain": {
        "data": "network.nodes",
        "field": "data.type0"
      }
    },
    {
      "name": "edgeColor",
      "type": "ordinal",
      "range": "[colorScheme]",
      "domain": {
        "data": "network.links",
        "field": "linkType"
      }
    },
    {
      "name": "edgeWidth",
      "type": "linear",
      "range": [
        1,
        10
      ],
      "rangeMapFunction": "datum * params.linkWidthParam",
      "domain": {
        "data": "network.links",
        "field": "linkWeight"
      }
    },
    {
      "name": "edgeOpacity",
      "type": "linear",
      "range": [
        0,
        0.8
      ],
      "rangeMapFunction": "datum * params.linkOpacityParam",
      "domain": {
        "data": "network.links",
        "field": "linkWeight"
      }
    }
  ],
  "vis": [
    {
      "entries": "network.links",
      "layout": "layout",
      "mark": {
        "type": "linkpath",
        "start": "source",
        "end": "target",
        "parallelLinksType": "curve",
        "parallelLinksGap": {
          "expression": "params.linkGapParam"
        },
        "stroke": {
          "conditions": [
            {
              "test": "!params.nodeTypeInShape",
              "value": "grey"
            }
          ],
          "field": "linkType",
          "scale": "edgeColor"
        },
        "strokeWidth": {
          "expression": "datum.linkWeight == null ? params.linkWidthParam : 0.1 * datum.linkWeight * params.linkWidthParam"
        },
        "opacity": {
          "conditions": [
            {
              "selectionIsEmpty": "node_selection.nodes",
              "expression": "((datum.data._time != null && datum.data._time >= params.time[0] && datum.data._time <= params.time[1]) || (datum.data._time == null)) ? params.linkOpacityParam : '0' "
            },
            {
              "inSelection": "neighbours.links",
              "expression": "((datum.data._time != null && datum.data._time >= params.time[0] && datum.data._time <= params.time[1]) || (datum.data._time == null)) ? params.linkOpacityParam : '0' "
            }
          ],
          "expression": " (datum.data._time >= params.time[0] && datum.data._time <= params.time[1]) ? 0.1 : 0 "
        },
        "shape": "line"
      }
    },
    {
      "entries": "network.nodes",
      "layout": "layout",
      "actions": [
        {
          "interaction": "select",
          "using": "cursor",
          "event": "mouseover",
          "action": "replace",
          "selection": "node_selection"
        },
        {
          "interaction": "select",
          "using": "cursor",
          "event": "mouseout",
          "action": "remove",
          "selection": "node_selection"
        }
      ],
      "mark": {
        "type": "symbol",
        "shape": {
          "conditions": [
            {
              "test": "!params.nodeTypeInShape",
              "value": "circle"
            }
          ],
          "field": "data.type0",
          "scale": "nodeShape"
        },
        "area": {
          "expression": "40 + datum.degree * params.nodeSizeParam"
        },
        "fill": {
          "conditions": [
            {
              "test": "params.nodeTypeInShape",
              "value": "black"
            }
          ],
          "field": "data.type0",
          "scale": "nodeColor"
        },
        "stroke": "white",
        "opacity": {
          "conditions": [
            {
              "selectionIsEmpty": "node_selection.nodes",
              "expression": "params.nodeOpacityParam"
            },
            {
              "inSelection": "node_selection.nodes",
              "expression": "params.nodeOpacityParam"
            },
            {
              "inSelection": "neighbours.nodes",
              "expression": "params.nodeOpacityParam"
            }
          ],
          "value": 0.1
        },
        "tooltip": {
          "expression": "[nodeLabel] + ' (' + datum.degree + (datum.degree == 1 ? ' link)' : ' links)') "
        }
      }
    },
    {
      "entries": "network.nodes",
      "layout": "layout",
      "overlapRemoval": {
        "field": "degree",
        "overlapDistance": 1.5
      },
      "mark": {
        "type": "text",
        "text": {
          "expression": "[nodeLabel]"
        },
        "opacity": {
          "conditions": [
            {
              "selectionIsEmpty": "node_selection.nodes",
              "value": 1
            },
            {
              "inSelection": "node_selection.nodes",
              "value": 1
            },
            {
              "inSelection": "neighbours.nodes",
              "value": 1
            }
          ],
          "value": 0.1
        },
        "cursor": "none",
        "dx": 5,
        "dy": 4,
        "fontSize": {
          "expression": "params.labelSizeParam"
        },
        "stroke": "white",
        "strokeWidth": 0.3
      }
    }
  ]
}